/*
Structural
    :root - Representa la raiz del documento (html) usando una pseudoclase tenemos más especificidad que si usáramos html
    :empty - Esta pseudoclase se aplica para los elementos vacios, es decir, etiquetas que no tienen contenido
    
    -child
        :first-child - Selecciona al primer hijo (independientemente del tipo de etiqueta)
        :last-child - Selecciona al ultimo hijo (independientemente del tipo de etiqueta)
        :nth-child(n) - Selecciona al hijo n(independientemente del tipo de etiqueta)
        :nth-last-child(n) Selecciona al hijo n empezando a contar desde el último (independientemente del tipo de etiqueta)
        :only-child Selecciona al hijo unico(independientemente del tipo de etiqueta)
    
    -type
        :first-of-type
        :last-of-type
        :nth-of-type()
        :nth-last-of-type()
        :only-of-type
    Valores posibles:
        odd - Impares
        even - Pares
        numeros enteros - 2,3,4...
        equaciones (1n,3n,4n+1,n+4,...)
            n es un multiplicador va de 0 hasta que se quede sin elementos
    
Negation
    :not() - Selecciona al elemento que no cumpla la condición, se puede poner cualquier selector salvo otro :not
*/

/* 
.parragraph{
    background: lightblue;
    padding: .5em;
}

.parragraph:empty{
    padding: 0;
    all: unset;
}  
*/

/* .parragraph:first-child{
background: red;
}

.parragraph:last-child{
    background: blue;
} */

/* Impares */
/* 
.parragraph:nth-child(odd){
    background: lightcoral;
} */

/* Pares */
/* 
.parragraph:nth-child(even){
    background: lightcoral;
} */

/* Numeros enteros */
/* .parragraph:nth-child(8){
    background: red;
} */

/* n primero vale 0, despues 1, despues 2 y por ultimo 3 */
/* .parragraph:nth-child(3n){ 
    background: lightcoral;
} */

/* .parragraph:nth-child(3n + 1){ 
    background: lightcoral;
} */

/* .parragraph:nth-child(n + 4){ 
    background: lightcoral;
} */

/* .parragraph:nth-last-child(4){ 
    background: lightcoral;
} */

/* Hijo Unico */
/* .parragraph:only-child{
    background: lightseagreen;
} */

/* .parragraph:nth-of-type(1){
    background: red;
} */

/* .parragraph:last-of-type{
    background: green;
} */

/* .parragraph:nth-last-of-type(5){
    background: grey;
} */

/* .parragraph:first-of-type{
    background: red;
} */

/* 
.parragraph:not(div){
    background: green;
} */

/* .parragraph:not(.first){
    background: green;
} */